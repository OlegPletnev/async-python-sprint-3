import dataclasses
import logging
import sys
from asyncio import StreamWriter
from enum import Enum
from typing import Literal, TypedDict

from pydantic_settings import BaseSettings

logger: logging.Logger = logging.getLogger(__name__)
logger.setLevel(logging.DEBUG)
logger.addHandler(logging.StreamHandler(stream=sys.stdout))


class Commands(Enum):
    RULES = '/rules'
    STATUS = '/status'
    EXIT = '/exit'


commands = [command.value for command in Commands]


class Settings(BaseSettings):
    host: str = '127.0.0.1'    # —Ö–æ—Å—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω —Å–µ—Ä–≤–µ—Ä
    port: int = 8000           # –ø–æ—Ä—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç —Å–ª—É—à–∞—Ç—å —Å–µ—Ä–≤–µ—Ä
    backup_file: str = 'backup.csv'
    backup_last_message: int = 20
    private_message_sign: str = '>>'
    exit_sign: str = '~~'
    date_fmt: str = '%Y-%m-%d %H:%M:%S'
    date_delimiter: str = ' üïò '
    lifetime_message: int = 1  # –ø–µ—Ä–∏–æ–¥ –∂–∏–∑–Ω–∏ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—á–∞—Å)
    limit_message: int = 20    # –∫–æ–ª-–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è 1 –∫–ª–∏–µ–Ω—Ç–∞ –∑–∞ limit_time
    limit_time: int = 1        # —Å–∫–æ–ª—å–∫–æ (–≤ —á–∞—Å–∞—Ö) –≤—ã–¥–µ–ª–µ–Ω–æ –¥–ª—è limit_message
    ban_time: int = 4          # —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ (–≤ —á–∞—Å–∞—Ö) –∏–¥–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞
    rules: str = (
        'Be polite to other chat participants, otherwise,\n'
        'after three complaints, you will be banned for 4 hours.\n'
        '\nSome commands:\n'
        '*\t/rules -- show these chat rules\n'
        '*\t/status -- show info about the chat\n'
        '*\t/private <username> <message> -- send private message\n'
        '*\t/ban <username> -- complain about some user\n'
        '*\t/exit -- log out of the chat\n\n'
        'You can send a maximum of 20 messages '
        'to a public or private chat in one hour\n'
    )


chat = Settings()

user = str                     # –í –∫–æ–¥–µ —á–∞—â–µ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è username

actual_streams: list[StreamWriter] = []  # —Å–ø–∏—Å–æ–∫ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ (—Å–æ–∫–µ—Ç–æ–≤)
user_from_stream: dict[StreamWriter, user] = {}  # {writer: username}


class UserStats(TypedDict):
    counter_message: int          # –°—á—ë—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ –ª–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥
    finish_timeout: float | None  # –ö–æ–Ω–µ—Ü –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
    complains: set[user]          # –°–ø–∏—Å–æ–∫ –∂–µ–ª–∞—é—â–∏—Ö –∑–∞–±–∞–Ω–∏—Ç—å —é–∑–µ—Ä–∞
    ban: bool                     # –ï—Å—Ç—å –ª–∏ –±–∞–Ω —É —é–∑–µ—Ä–∞?
    start_timeout: float | None   # –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    writers: list[StreamWriter]   # –í–µ–¥—å —é–∑–µ—Ä –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–ª–∏–µ–Ω—Ç–æ–≤
    password: str                 # –ü–∞—Ä–æ–ª—å –∫ –ª–æ–≥–∏–Ω—É


user_stats: dict[user, UserStats]
